## This action is intented to be used with the cpp-project-template and tests
## the template itself using multiple operating systems and compilers. See the
## CI.yml file in this directory for the action that will run to test student
## submissions
name: Test on multiple platforms

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    if: github.repository == 'shanep/cpp-project-template'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        build_type: [x64-Release, x64-Debug]
        c_compiler: [gcc, clang,cl]
        include:
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
            build_type: x64-ASan
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
            build_type: x64-Debug-win32
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
            build_type: x64-Release-win32
        exclude:
          - os: macos-latest
            c_compiler: gcc
          - os: macos-latest
            c_compiler: cl
          - os: ubuntu-latest
            c_compiler: cl
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: windows-latest
            build_type: x64-Debug
          - os: windows-latest
            build_type: x64-Release
    steps:
    - uses: actions/checkout@v3
    - name: Set VCPKG_ROOT env variable
      shell: bash
      run: |
        echo "VCPKG_ROOT=$(echo $VCPKG_INSTALLATION_ROOT)" >> "$GITHUB_ENV"
    - name: Configure
      run: >
        cmake --preset ${{ matrix.build_type }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}

    - name: Build
      run: cmake --build --preset ${{ matrix.build_type }}

    - name: Test
      run: ctest --preset ${{ matrix.build_type }}

  asan:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_type: [x64-ASan]
    steps:
    - uses: actions/checkout@v3
    - name: Set VCPKG_ROOT env variable
      shell: bash
      run: |
        echo "VCPKG_ROOT=$(echo $VCPKG_INSTALLATION_ROOT)" >> "$GITHUB_ENV"
    - name: Configure
      run: >
        cmake --preset ${{ matrix.build_type }}

    - name: Build
      run: cmake --build --preset ${{ matrix.build_type }}

    - name: Test Leak
      run: |
        ./out/build/x64-ASan/test-lab --gtest_filter=DISABLED_LeakTest.fail --gtest_also_run_disabled_tests 2>&1 | grep -i "LeakSanitizer: detected memory leaks"

    - name: Test OutOfBounds
      run: |
        ./out/build/x64-ASan/test-lab --gtest_filter=DISABLED_OutOfBoundsTest.fail --gtest_also_run_disabled_tests 2>&1 | grep -i "AddressSanitizer: stack-buffer-overflow"

  coverage:
    needs: build
    uses: ./.github/workflows/coverage-report-lcov.yml
